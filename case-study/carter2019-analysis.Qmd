---
title: "Handling Missingness, Failures, and Non-Convergence in Simulation Studies"
subtitle: "Carter et al. (2019) case study"
author: 
 - Samuel Pawel
 - František Bartoš
 - Björn S. Siepe
 - Anna Lohmann
date: "12 September 2024"
format:
  html:
    toc: true
    number-sections: true
    theme: cosmo
    code-fold: true
    code-tools: true
    code-summary: "Show the code"
    fig-width: 7
    fig-height: 4.5
    fig-align: "center"
    embed-resources: true
execute:
  message: false
  warning: false
---

# Packages and data

```{r}
## packages and data
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggbeeswarm)
library(cowplot)
load("carter2019.rda")
```

# Visualize missingness

```{r}
#| fig.height = 12
methodlevels <- c("RE", "WAAP-WLS", "PET-PEESE", "TF", "3PSM", "p-curve",
                  "p-uniform")
carter2019$missingcase <- is.na(carter2019$b0_estimate)
carter2019summaries <- carter2019 |>
    mutate(k = factor(k),
           delta = factor(delta),
           tau = factor(tau),
           method = factor(method, levels = methodlevels)) |>
    group_by(method, k, delta, tau, qrpEnv, censor) |>
    summarise(missing = mean(missingcase)) |>
    ungroup()

plotA <- carter2019summaries |>
    mutate(condition = paste(k, delta, tau, qrpEnv, censor)) |>
    ggplot(aes(x = method, y = missing)) +
    geom_line(aes(group = condition), alpha = 0.1) +
    geom_quasirandom(alpha = 0.2) +
    scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +
    labs(x = "Method", y = "Condition-wise\nnon-convergence rate") +
    theme_bw() +
    theme(panel.grid.minor = element_blank(),
          panel.grid.major = element_line(linetype = "dashed"))

## marginal summaries per variable
vars <- c("tau", "k", "delta", "qrpEnv", "censor")
varmiss <- do.call("rbind", lapply(X = vars, FUN = function(var) {
    carter2019summaries |>
        rename(level = var) |>
        group_by(method, level) |>
        summarise(missingMean = mean(missing),
                  missingMedian = mean(missing),
                  missingMin = min(missing),
                  missingMax = max(missing)) |>
        mutate(variable = var) |>
        ungroup()
}))
overallmiss <- carter2019summaries |>
    group_by(method) |>
    summarise(missingMean = mean(missing),
              missingMedian = mean(missing),
              missingMin = min(missing),
              missingMax = max(missing)) |>
    mutate(variable = "Overall",
           level = "")
marginmiss <- rbind(varmiss, overallmiss)
varlevels <- c("Overall", "k", "delta", "tau", "qrpEnv", "censor")
varlabels <- c("Overall", "# Studies", "Effect", "Heterogeneity", "QRPs",
               "Publication bias")
subplots <- lapply(X = c("Overall", vars), FUN = function(var) {
    if (var != "Overall") {
    datall <- carter2019summaries |>
        rename(level = var) |>
        mutate(variable = var)
    } else {
        datall <- carter2019summaries |>
            mutate(variable = var,
                   level = "")
    }
    datall <- datall |>
        mutate(variable = factor(variable, levels = varlevels, labels = varlabels))
    datsummaries <- marginmiss |>
        filter(variable == var) |>
        mutate(variable = factor(variable, levels = varlevels, labels = varlabels))
    ggplot(data = datall, aes(x = method, y = missing)) +
        facet_grid(level ~ variable) +
        geom_boxplot(outlier.size = 0.25, outlier.alpha = 0.4, alpha = 0.9) +
        geom_point(data = datsummaries,
                   aes(y = missingMean,
                       color = ifelse(missingMean > 0.001, TRUE, FALSE)),
                   shape = "diamond", size = 2, alpha = 0.95, show.legend = FALSE) +
        geom_hline(yintercept = 0, lty = 2, alpha = 0.3) +
        labs(y = NULL, x = NULL) +
        scale_y_continuous(labels = scales::percent) +
        scale_color_manual(values = c(1, 2)) +
        coord_flip() +
        theme_bw() +
        theme(panel.grid.minor = element_blank(),
              axis.text.y = element_text(size = rel(0.75)))
})
subplots[[5]] <- subplots[[5]] + labs(y = "")
subplots[[6]] <- subplots[[6]] + labs(y = "")
plotC1 <- plot_grid(plotlist = subplots, ncol = 2, rel_heights = c(1, 1.25, 1))
plotC <- ggdraw(add_sub(plotC1, bquote("Condition-wise non-convergence rate"),
                        vpadding = grid::unit(0, "lines"), y = 5, x = 0.5,
                        vjust = 4.5, size = 12))
plot_grid(plotA, plotC, ncol = 1, rel_heights = c(1, 4.5), labels = c("A", "B"))
## ggsave(filename = "figures/fig-carter-exploring-missingness.pdf", width = 8.5,
##        height = 10, scale = 1.025)
```


# Case-wise deletion vs. list-wise deletion vs. baseline replacement -- how does it change type I error rate?

```{r}
## extract baseline method (RE meta-analysis) data
carter2019rema <- carter2019 |>
    filter(method == "RE") |>
    rename(b0_estimaterema = b0_estimate,
           H0.reject.posrema = H0.reject.pos) |>
    select(id, k, delta, tau, qrpEnv, censor, b0_estimaterema, H0.reject.posrema)

## compute RR, bias, other metrics for different missingness handling approaches
carter2019summaries <- left_join(carter2019, carter2019rema) |>
    mutate(b0_estimate.base = ifelse(is.na(b0_estimate), b0_estimaterema,
                                     b0_estimate),
           H0.reject.pos.base = ifelse(is.na(H0.reject.pos), H0.reject.posrema,
                                       H0.reject.pos)) |>
    select(-b0_estimaterema, H0.reject.posrema) |>
    mutate(missingcase = is.na(b0_estimate),
           missingbase = is.na(b0_estimate.base)) |>
    group_by(id) |>
    mutate(missinglist = any(missingcase)) |>
    ungroup() |>
    mutate(b0_estimate.list = ifelse(missinglist, NA, b0_estimate),
           H0.reject.pos.list = ifelse(missinglist, NA, H0.reject.pos)) |>
    group_by(method, k, delta, tau, qrpEnv, censor) |>
    summarise(RRcase = mean(H0.reject.pos, na.rm = TRUE),
              RRlist = mean(H0.reject.pos.list, na.rm = TRUE),
              RRbase = mean(H0.reject.pos.base, na.rm = TRUE),
              RRMCSEcase = sqrt(RRcase*(1 - RRcase)/sum(!missingcase)),
              RRMCSElist = sqrt(RRlist*(1 - RRlist)/sum(!missinglist)),
              RRMCSEbase = sqrt(RRbase*(1 - RRbase)/sum(!missingbase)),
              biascase = mean(b0_estimate - delta, na.rm = TRUE),
              biaslist = mean(b0_estimate.list - delta, na.rm = TRUE),
              biasbase = mean(b0_estimate.base - delta, na.rm = TRUE),
              biasMCSEcase = sd(b0_estimate, na.rm = TRUE)/sqrt(sum(!missingcase)),
              biasMCSElist = sd(b0_estimate.list, na.rm = TRUE)/sqrt(sum(!missinglist)),
              biasMCSEbase = sd(b0_estimate.base, na.rm = TRUE)/sqrt(sum(!missingbase)),
              missratecase = mean(missingcase),
              missratelist = mean(missinglist),
              missratebase = mean(missingbase)) |>
    ungroup() |>
    group_by(k, delta, tau, qrpEnv, censor) |>
    ## when effect = 0, lower RR (T1E) is better, otherwise higher RR (power) is better
    mutate(RRrankcase = ifelse(delta == 0, rank(RRcase), rank(-RRcase)),
           RRranklist = ifelse(delta == 0, rank(RRlist), rank(-RRlist)),
           RRrankbase = ifelse(delta == 0, rank(RRbase), rank(-RRbase)),
           biasrankcase = rank(abs(biascase)),
           biasranklist = rank(abs(biaslist)),
           biasrankbase = rank(abs(biasbase))) |>
    ungroup()

## wrangle data in long format for plots
carter2019summarieslong <- carter2019summaries |>
    filter(delta == 0, tau == 0, k == 10, censor == "none") |>
    pivot_longer(cols = c(RRcase, RRlist, RRbase), names_to = "Type",
                 values_to = "RR") |>
    mutate(RRMCSE =  case_when(Type == "RRcase" ~ RRMCSEcase,
                               Type == "RRlist" ~ RRMCSElist,
                               TRUE ~ RRMCSEbase),
           bias = case_when(Type == "RRcase" ~ biascase,
                            Type == "RRlist" ~ biaslist,
                            TRUE ~ biasbase),
           biasMCSE = case_when(Type == "RRcase" ~ biasMCSEcase,
                                Type == "RRlist" ~ biasMCSElist,
                                TRUE ~ biasMCSEbase),
           missrate =  case_when(Type == "RRcase" ~ missratecase,
                                 Type == "RRlist" ~ missratelist,
                                 TRUE ~ missratebase),
           Type = factor(Type, levels = c("RRbase", "RRlist", "RRcase"),
                         labels = c("baseline method (RE) replacement",
                                    "list-wise deletion",
                                    "case-wise deletion")),
           QRP = factor(qrpEnv, levels = c("none", "med", "high"),
                        labels = c("no QRPs environment",
                                   "medium QRPs environment",
                                   "high QRPs environment"))) |>
    ungroup() |>
    select(method, k, delta, tau, Type, QRP, RR, RRMCSE, bias, biasMCSE, missrate)

## plot RR for interesting conditions
dodge <- 0.7
cols <- palette.colors(n = 4, palette = "Okabe-Ito")[-1]
ggplot(data = carter2019summarieslong,
       aes(x = method, y = RR, color = Type)) +
  facet_grid(~ QRP) +
  geom_vline(xintercept = seq(1.5, 6.5), lty = 3, alpha = 0.25) +
  geom_hline(yintercept = 0.05, lty = 2, alpha = 0.6) +
  geom_errorbar(aes(ymin = RR - RRMCSE, ymax = RR + RRMCSE),
                position = position_dodge(width = dodge), width = 0) +
  geom_point(position = position_dodge(width = dodge)) +
  geom_text(aes(y = 0.115,
                label = paste0(round(missrate*100), "%")),
            position = position_dodge(width = dodge), size = 3,
            show.legend = FALSE, hjust = 1) +
  labs(x = "Method", color = "", y = bquote("Type I error rate " %+-% "MCSE")) +
  scale_y_continuous(breaks = c(0, 0.025, 0.05, 0.075, 0.1), labels = scales::percent) +
  scale_color_manual(values = cols) +
  guides(color = guide_legend(reverse = TRUE)) +
  coord_flip(ylim = c(0, 0.11)) +
  theme_bw() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = rel(1.025)))
## ggsave("figures/fig-carter-handling-missingness.pdf", width = 8, height = 5,
##        scale = 0.9)
```

# Session Info
```{r}
cat(paste(Sys.time(), Sys.timezone(), "\n"))
sessionInfo()
```
