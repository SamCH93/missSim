---
title: "Handling Missingness, Failures, and Non-Convergence in Simulation Studies"
subtitle: "Coding Agreement of Raters"
author: 
 - Samuel Pawel
 - Björn S. Siepe
 - Anna Lohmann
 - František Bartoš
date: "15 August 2024"
format:
  html:
    toc: true
    number-sections: true
    theme: cosmo
    code-fold: true
    code-tools: true
    code-summary: "Show the code"
    fig-width: 7
    fig-height: 4.5
execute:
  message: false
  warning: false
---


# Analyses for the appendix

Prepare the data

```{r}
library(tidyverse)
library(here)

## data
sim_res <- readRDS(file = here("data/sim_res.RDS"))

# Some cleaning
sim_res_clean <- sim_res |>  
  # ignore irrelevant cols
  select(!c(year, issue, journal, q2_1d_missingnenss_sumarized_other, 
            contains("comment"), q5_is_example, q7_coding_confidence)) |> 
  # for now, also filter pilot studies
  filter(is.na(id) | id == "agreement")

coding_orig  <- sim_res_clean |> 
  filter(id != "agreement" | is.na(id)) |> 
  select(!id)
coding_test  <- sim_res_clean |> 
  filter(id == "agreement") |> 
  select(!id)

agreement_matrix <- matrix(NA, ncol = ncol(coding_test), nrow = nrow(coding_test))
rownames(agreement_matrix) <- coding_test$doi
colnames(agreement_matrix) <- colnames(coding_test)
agreement_matrix <- data.frame(agreement_matrix)
```



```{r fig.align = "center", fig.height = 5, fig.width = 10}
# assess agreement
disagreements <- c()
for(j in 1:ncol(agreement_matrix)){
  for(i in 1:nrow(agreement_matrix)){
    this_test <- coding_test[i,j]
    this_orig <- coding_orig[coding_orig$doi == coding_test$doi[i],j]
    
    if(length(is.na(this_orig)) > 1){
        next(paste0("Multiple values for this_orig with index", i, " and column", j, " in coding_orig"))
      }
    if(is.na(this_orig)){
      this_orig <- "coded as NA"
    }
        if(is.na(this_test)){
      this_test <- "coded as NA"
    }
    
    if(this_test == this_orig){
      agreement_matrix[i,j] <- TRUE
    }else{
      agreement_matrix[i,j] <- FALSE
      disagreements <- c(disagreements, paste0(
        colnames(coding_orig)[j], " in (", coding_test$doi[i], "): ", this_orig, " vs ", this_test
      ))
    }
  }    
}


# print(disagreements)

```



Figure for the paper:
```{r fig.align = "center", fig.height = 8, fig.width = 5*1.5}

# add google font
sysfonts::font_add_google("News Cycle", "news")
# use showtext
showtext::showtext_auto()

theme_bs <- function(){

  
  # theme
  ggplot2::theme_minimal(base_family = "news") +
    ggplot2::theme(
      # remove minor grid
      panel.grid.minor = ggplot2::element_blank(),
      # Title and Axis Texts
      plot.title = ggplot2::element_text(face = "plain",
                                         size = ggplot2::rel(1.2),
                                         hjust = 0.5),
      plot.subtitle = ggplot2::element_text(size = ggplot2::rel(1.1),
                                            hjust = 0.5),
      axis.text.x = ggplot2::element_text(face = "plain", size = 16),
      axis.title.x = ggplot2::element_text(face = "plain", size = 16),
      axis.title.y = ggplot2::element_text(face = "plain", size = 16),
      axis.line = element_line(colour = "#6d6d6e"),
      
      # Faceting
      strip.text = ggplot2::element_text(face = "plain",
                                         size = ggplot2::rel(1.1),
                                         hjust = 0.5),
      strip.text.x.top = ggplot2::element_text(face = "plain", 
                                               size = ggplot2::rel(1.2),
                                               hjust = 0.5),
      # strip.text.y = element_blank(),
      strip.background = ggplot2::element_rect(fill = NA, color = NA),
      # Grid
      panel.grid = ggplot2::element_line(colour = "#F3F4F5"),
      # Legend
      legend.title = ggplot2::element_text(face = "plain"),
      legend.position = "top",
      legend.justification = 1,
      # Panel/Facets
      panel.spacing.x = ggplot2::unit(1.6, "lines"),
      panel.spacing.y = ggplot2::unit(1.6, "lines"),
      # Remove vertical grid lines
      panel.grid.major.x = ggplot2::element_blank(),
      text = ggplot2::element_text(size = 24)
      
    )
}


prop_and_ci <- function(x){  
  x <- na.omit(x)
  n <- length(x)
  success <- sum(x)
  
  # Perform binom.test
  test_result <- binom.test(success, n)
  
  proportion <- test_result$estimate
  ci_lower <- test_result$conf.int[1]
  ci_upper <- test_result$conf.int[2]
  
  # Return results as a named vector
  return(c(proportion = proportion, ci_lower = ci_lower, ci_upper = ci_upper))
}



agreement_plot <- agreement_matrix |> 
    as.data.frame() |> 
    select(-c("doi", "reviewer")) |>
    reframe(across(everything(), prop_and_ci)) |> 
    t() |> 
    magrittr::set_colnames(c("Agreement", "ci_l", "ci_h")) |> 
  as.data.frame() |> 
  rownames_to_column(var = "Question") |>
  mutate(Question = case_match(Question,
                               "q1_is_sim_study" ~ "Q1: Contains sim study?",
                               "q2_mentions_missingness" ~ "Q2: M mentioned?",
                               "q2a_mentions_missingness_discussion" ~ "Q2a: ...in discussion?",
                               "q2b_mentions_missingness_data_generation" ~ "Q2b: ...in data generation?",
                               "q2c_mentions_missingness_results" ~ "Q2c: ...in results?",
                               "q2_1a_missingness_sumarized_text" ~ "Q2.1a: M summarized in text?",
                               "q2_1b_missingness_sumarized_table" ~ "Q2.1b: M summarized in table?",
                               "q2_1c_missingness_sumarized_visualization" ~ "Q2.1c: M summarized with visualization?",
                               "q2_2_missingness_summarized" ~ "Q2.2: How is M summarized?",
                               "q3_report_dealing_with_missingness" ~ "Q3: Authors report how they dealt with M?",
                               "q3_1_method_dealing_with_missingness" ~ "Q3.1: Method to deal with M?",
                               "q3_2_method_justification" ~ "Q3.2: Justification for method?",
                               "q3_3_type_justification" ~ "Q3.3: Type of justification?",
                               "q4_code_available" ~ "Q4: Code for sim available?",
                               .default = Question)) |> 
  mutate(Question = factor(Question, levels = Question)) |> 
  mutate(Question = forcats::fct_rev(Question)) |> 
  mutate(ag_pct = paste0(round(Agreement,3) * 100, "%"),
         ag_ci_l_pct = paste0(round(ci_l,3) * 100, "%"),
         ag_ci_h_pct = paste0(round(ci_h,3) * 100, "%")) |> 
  mutate(ag_label = paste0(ag_pct, "\n",
                           "[", ag_ci_l_pct, ", ",
                           ag_ci_h_pct, "]")) |> 
  ggplot(aes(x = Agreement, y = Question))+
    ## geom_bar(stat = "identity", alpha = 0.8, fill = "#08519c") +
  geom_segment(aes(xend = 0, yend = Question), alpha = 0.5, size = 0.5) +
  geom_point(size = 2.6) +
  # add label with percentage at the end of geom_segment
  geom_text(aes(label = ag_label),
            hjust = 0,
            nudge_x = 0.01,
            size = 4.3)+
  scale_fill_gradient(high = "darkblue", low = "red") +
  scale_y_discrete(labels = scales::label_wrap(16))+
  scale_x_continuous(limits = c(0, 1.24), expand = c(0.0, 0), labels = scales::percent,
                     breaks = c(0,.25,.5,.75,1)) +
  theme_bs()+
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
          axis.text.y = element_text(size = rel(0.75)),
          axis.text.x = element_text(size = rel(0.85)),
          axis.title = element_text(size = rel(0.65)))+
  labs(y = "")


agreement_plot

ggsave("agreement_plot.pdf", agreement_plot, path = here("literature-review/figures/"),
       device = "pdf", height = 9.5, width = 8)

```




```{r}
sessionInfo()
```

